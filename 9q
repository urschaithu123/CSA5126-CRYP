#include <stdio.h>
#include <string.h>

// Function to prepare the key table based on a keyword
void prepareKeyTable(char key[], char keyTable[5][5]) {
    int k, i, j;
    int keyLength = strlen(key);
    int index = 0;
    char keySet[26] = {0};

    // Fill the key set with the letters from the keyword
    for (k = 0; k < keyLength; ++k) {
        if (key[k] != 'J') {
            if (keySet[key[k] - 'A'] == 0) {
                keySet[key[k] - 'A'] = 1;
                keyTable[index / 5][index % 5] = key[k];
                ++index;
            }
        }
    }

    // Fill the key set with the remaining letters of the alphabet
    for (k = 0; k < 26; ++k) {
        if (keySet[k] == 0 && k != ('J' - 'A')) {
            keyTable[index / 5][index % 5] = 'A' + k;
            ++index;
        }
    }
}

// Function to find the positions of two characters in the key table
void findPositions(char keyTable[5][5], char a, char b, int* rowA, int* colA, int* rowB, int* colB) {
    int i, j;

    for (i = 0; i < 5; ++i) {
        for (j = 0; j < 5; ++j) {
            if (keyTable[i][j] == a) {
                *rowA = i;
                *colA = j;
            }
            if (keyTable[i][j] == b) {
                *rowB = i;
                *colB = j;
            }
        }
    }
}

// Function to decrypt a Playfair-encoded message
void playfairDecrypt(char keyTable[5][5], char ciphertext[]) {
    int i, rowA, colA, rowB, colB;

    for (i = 0; i < strlen(ciphertext); i += 2) {
        // Find positions of the two characters in the key table
        findPositions(keyTable, ciphertext[i], ciphertext[i + 1], &rowA, &colA, &rowB, &colB);

        // Decrypt the pair
        if (rowA == rowB) {
            // Same row, shift left
            printf("%c%c", keyTable[rowA][(colA - 1 + 5) % 5], keyTable[rowB][(colB - 1 + 5) % 5]);
        } else if (colA == colB) {
            // Same column, shift up
            printf("%c%c", keyTable[(rowA - 1 + 5) % 5][colA], keyTable[(rowB - 1 + 5) % 5][colB]);
        } else {
            // Rectangle, swap columns
            printf("%c%c", keyTable[rowA][colB], keyTable[rowB][colA]);
        }
    }
}

int main() {
    char key[] = "PT109";
    char keyTable[5][5];
    char ciphertext[] = "KXJEY UREBE ZWEHE WRYTU HEYFS KREHE GOYFI WTTTU OLKSY CAJPO BOTEI ZONTX BYBNT GONEY CUZWR GDSON SXBOU YWRHE BAAHY USEDQ";

    // Prepare the key table
    prepareKeyTable(key, keyTable);

    // Decrypt the Playfair-encoded message
    playfairDecrypt(keyTable, ciphertext);

    return 0;
}
